// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that suggests remediation steps for identified vulnerabilities.
 *
 * - suggestRemediationSteps - A function that suggests remediation steps for identified vulnerabilities.
 * - SuggestRemediationStepsInput - The input type for the suggestRemediationSteps function.
 * - SuggestRemediationStepsOutput - The return type for the suggestRemediationSteps function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRemediationStepsInputSchema = z.object({
  vulnerabilityDescription: z.string().describe('The description of the vulnerability.'),
  deviceInformation: z.string().describe('Information about the device that has the vulnerability.'),
});

export type SuggestRemediationStepsInput = z.infer<typeof SuggestRemediationStepsInputSchema>;

const SuggestRemediationStepsOutputSchema = z.object({
  remediationSteps: z.string().describe('The suggested remediation steps for the identified vulnerability.'),
  confidenceScore: z.number().describe('The confidence score (0-1) for the suggested remediation steps.'),
});

export type SuggestRemediationStepsOutput = z.infer<typeof SuggestRemediationStepsOutputSchema>;

export async function suggestRemediationSteps(input: SuggestRemediationStepsInput): Promise<SuggestRemediationStepsOutput> {
  return suggestRemediationStepsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRemediationStepsPrompt',
  input: {schema: SuggestRemediationStepsInputSchema},
  output: {schema: SuggestRemediationStepsOutputSchema},
  prompt: `You are a security expert providing remediation steps for identified vulnerabilities.

  Based on the vulnerability description and device information, suggest remediation steps and provide a confidence score for the suggested steps.

Vulnerability Description: {{{vulnerabilityDescription}}}
Device Information: {{{deviceInformation}}}

Suggest remediation steps and provide a confidence score (0-1) for the suggested steps.`, 
});

const suggestRemediationStepsFlow = ai.defineFlow(
  {
    name: 'suggestRemediationStepsFlow',
    inputSchema: SuggestRemediationStepsInputSchema,
    outputSchema: SuggestRemediationStepsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
